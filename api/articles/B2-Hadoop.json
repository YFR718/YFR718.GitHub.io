{"title":"Hadoop ing","uid":"7ca75cf71c3ba27225807c4b0387518a","slug":"B2-Hadoop","date":"2021-11-12T11:13:22.000Z","updated":"2021-11-16T09:02:17.809Z","comments":true,"path":"api/articles/B2-Hadoop.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/0c9f61a46aa44eb396187322d87d7f20.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center","content":"<h1 id=\"大数据概念\"><a href=\"#大数据概念\" class=\"headerlink\" title=\"大数据概念\"></a>大数据概念</h1><p><strong>大数据（Big Data）</strong>：指无法在一定时间范围内用常规软件工具进行捕捉、管理和处理的数据集合，是需要新处理模式才能具有更强的决策力、洞察发现力和流程优化能力的海量、高增长率和多样化的信息资产。大数据主要解决，海量数据的采集、存储和分析计算问题。</p>\n<p><strong>⭐大数据特点（4V） ：</strong></p>\n<ul>\n<li>Volume（大量）</li>\n<li>Velocity（高速）</li>\n<li>Variety（多样）</li>\n<li>Value（低价值密度）</li>\n</ul>\n<h1 id=\"Hadoop-概述\"><a href=\"#Hadoop-概述\" class=\"headerlink\" title=\"Hadoop 概述\"></a>Hadoop 概述</h1><ul>\n<li><p>Hadoop是什么<br>1）Hadoop是一个由Apache基金会所开发的分布式系统基础架构。<br>2）主要解决，海量数据的存储和海量数据的分析计算问题。<br>3）广义上来说，Hadoop通常是指一个更广泛的概念——Hadoop生态圈。</p>\n</li>\n<li><p>Hadoop发展历史</p>\n<p>1）Hadoop创始人Doug</p>\n<p>2）2001年年底Lucene成为Apache基金会的一个子项目。<br>3）对于海量数据的场景，Lucene框架面对与Google同样的困难，存储海量数据困难，检索海量速度慢。<br>4）学习和模仿Google解决这些问题的办法 ：微型版Nutch。<br>5）可以说Google是Hadoop的思想之源（Google在大数据方面的三篇论文）</p>\n<p>GFS —-&gt;HDFS、Map-Reduce —-&gt;MR、BigTable —-&gt;HBase<br>6）2003-2004年，Google公开了部分GFS和MapReduce思想的细节，以此为基础Doug Cutting等人用了2年业余时间实现了DFS和MapReduce机制，使Nutch性能飙升。</p>\n<p>7）2005 年Hadoop 作为 Lucene的子项目 Nutch的一部分正式引入Apache基金会。<br>8）2006 年 3 月份，Map-Reduce和Nutch Distributed File System （NDFS）分别被纳入到 Hadoop 项目中，Hadoop就此正式诞生，标志着大数据时代来临。</p>\n<p>9）名字来源于Doug Cutting儿子的玩具大象</p>\n</li>\n</ul>\n<h2 id=\"Hadoop-优势（4-高）\"><a href=\"#Hadoop-优势（4-高）\" class=\"headerlink\" title=\"Hadoop 优势（4 高）\"></a>Hadoop 优势（4 高）</h2><ol>\n<li>高可靠性：Hadoop底层维护多个数据副本，所以即使Hadoop某个计算元素或存储出现故障，也不会导致数据的丢失。</li>\n<li>高扩展性：在集群间分配任务数据，可方便的扩展数以千计的节点。</li>\n<li>高效性：在MapReduce的思想下，Hadoop是并行工作的，以加快任务处理速度。</li>\n<li>高容错性：能够自动将失败的任务重新分配。</li>\n</ol>\n<h2 id=\"Hadoop-组成（面试重点）-⭐⭐\"><a href=\"#Hadoop-组成（面试重点）-⭐⭐\" class=\"headerlink\" title=\"Hadoop 组成（面试重点） ⭐⭐\"></a>Hadoop 组成（面试重点） ⭐⭐</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Hadoop1.x</th>\n<th>Hadoop2.x</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>MapReduce<br>（计算+资源调度）</td>\n<td>MapReduce（计算）</td>\n</tr>\n<tr>\n<td></td>\n<td>Yarn（资源调度）</td>\n</tr>\n<tr>\n<td>HDFS（数据存储）</td>\n<td>HDFS（数据存储）</td>\n</tr>\n<tr>\n<td>Common（辅助工具）</td>\n<td>Common（辅助工具）</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>在 Hadoop1.x 时代 ， Hadoop中的MapReduce同时处理业务逻辑运算和资源的调度，耦合性较大。<br>在Hadoop2.x时代，增加了Yarn。Yarn只负责资 源 的 调 度 ， MapReduce 只负责运算。<br>在Hadoop3.x在组成上没有变化。</p>\n<h2 id=\"HDFS-架构概述\"><a href=\"#HDFS-架构概述\" class=\"headerlink\" title=\"HDFS 架构概述\"></a>HDFS 架构概述</h2><p>Hadoop Distributed File System，简称 HDFS，是一个分布式文件系统。 </p>\n<p><strong>HDFS架构组成</strong><br>1）NameNode（nn）：存储文件的元数据，如文件名，文件目录结构，文件属性（生成时间、副本数、文件权限），以及每个文件的块列表和块所在的DataNode等。<br>2）DataNode(dn)：在本地文件系统存储文件块数据，以及块数据的校验和。<br>3）Secondary NameNode(2nn)：每隔一段时间对NameNode元数据备份。</p>\n<h2 id=\"YARN-架构概述\"><a href=\"#YARN-架构概述\" class=\"headerlink\" title=\"YARN 架构概述\"></a>YARN 架构概述</h2><p>Yet Another Resource Negotiator 简称 YARN ，另一种资源协调者，是 Hadoop 的资源管理器。 </p>\n<p><strong>Yarn架构的组成</strong></p>\n<p>1）    ResourceManager（RM）：整个集群资源（内存、CPU等）的老大<br>2）    NodeManager（NM）：单个节点服务器资源老大<br>3）    ApplicationMaster（AM）：单个任务运行的老大<br>4）    Container：容器，相当一台独立的服务器，里面封装了任务运行所需要的资源，如内存、CPU、磁盘、网络</p>\n<p><img src=\"https://img-blog.csdnimg.cn/0ab47f5876d747f79f2863fb481d9cf4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"\"></p>\n<h2 id=\"MapReduce-架构概述\"><a href=\"#MapReduce-架构概述\" class=\"headerlink\" title=\"MapReduce 架构概述\"></a>MapReduce 架构概述</h2><p>MapReduce 将计算过程分为两个阶段：Map 和Reduce </p>\n<p>1）Map 阶段并行处理输入数据<br>2）Reduce 阶段对 Map 结果进行汇总</p>\n<h2 id=\"大数据技术生态体系\"><a href=\"#大数据技术生态体系\" class=\"headerlink\" title=\"大数据技术生态体系\"></a>大数据技术生态体系</h2><p><strong>HDFS、YARN、MapReduce三者关系</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/aba19ff190574fd1b96e16f2443680a1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"\"></p>\n<p><strong>大数据技术生态体系</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/abe4a022d2f140a1bbcce6b7b4339a27.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"\"></p>\n<p>图中涉及的技术名词解释如下：<br>1）Sqoop：Sqoop 是一款开源的工具，主要用于在Hadoop、Hive 与传统的数据库（MySQL）间进行数据的传递，可以将一个关系型数据库（例如 ：MySQL，Oracle 等）中的数据导进到Hadoop 的HDFS 中，也可以将HDFS 的数据导进到关系型数据库中。<br>2）Flume：Flume 是一个高可用的，高可靠的，分布式的海量日志采集、聚合和传输的系统， Flume 支持在日志系统中定制各类数据发送方，用于收集数据；<br>3）Kafka：Kafka 是一种高吞吐量的分布式发布订阅消息系统；<br>更多Java –大数据 –前端 –python 人工智能资料下载，可百度访问：尚硅谷官网<br>4）Spark：Spark 是当前最流行的开源大数据内存计算框架。可以基于 Hadoop 上存储的大数据进行计算。<br>5）Flink：Flink 是当前最流行的开源大数据内存计算框架。用于实时计算的场景较多。 6）Oozie：Oozie 是一个管理Hadoop 作业（job）的工作流程调度管理系统。<br>7）Hbase：HBase 是一个分布式的、面向列的开源数据库。HBase 不同于一般的关系数据库，它是一个适合于非结构化数据存储的数据库。<br>8）Hive：Hive 是基于 Hadoop 的一个数据仓库工具，可以将结构化的数据文件映射为一张数据库表，并提供简单的 SQL 查询功能，可以将 SQL 语句转换为 MapReduce 任务进行运行。其优点是学习成本低，可以通过类 SQL 语句快速实现简单的 MapReduce 统计，不必开发专门的MapReduce 应用，十分适合数据仓库的统计分析。<br>9）ZooKeeper：它是一个针对大型分布式系统的可靠协调系统，提供的功能包括：配置维护、名字服务、分布式同步、组服务等。 </p>\n<p><strong>推荐系统框架图</strong> </p>\n<p><img src=\"https://img-blog.csdnimg.cn/4ef994a3870d4d4a9738160ac460b9f8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"\"></p>\n<h1 id=\"Hadoop-运行环境搭建（开发重点）\"><a href=\"#Hadoop-运行环境搭建（开发重点）\" class=\"headerlink\" title=\"Hadoop 运行环境搭建（开发重点）\"></a>Hadoop 运行环境搭建（开发重点）</h1><h2 id=\"基础环境准备\"><a href=\"#基础环境准备\" class=\"headerlink\" title=\"基础环境准备\"></a>基础环境准备</h2><ol>\n<li>安装VMware、xshell</li>\n<li>配置静态IP、hostname、hosts</li>\n<li>创建用户，设置权限，克隆环境</li>\n<li>安装JDK、安装Hadoop</li>\n</ol>\n<h2 id=\"Hadoop-运行模式\"><a href=\"#Hadoop-运行模式\" class=\"headerlink\" title=\"Hadoop 运行模式\"></a>Hadoop 运行模式</h2><h3 id=\"本地运行模式\"><a href=\"#本地运行模式\" class=\"headerlink\" title=\"本地运行模式\"></a>本地运行模式</h3><p>啥都不用配置，直接运行即可</p>\n<h3 id=\"完全分布式运行模式（开发重点）⭐⭐⭐\"><a href=\"#完全分布式运行模式（开发重点）⭐⭐⭐\" class=\"headerlink\" title=\"完全分布式运行模式（开发重点）⭐⭐⭐\"></a>完全分布式运行模式（开发重点）⭐⭐⭐</h3><ol>\n<li>配置台虚拟机</li>\n<li>设置免密通信、shell脚本分发安装的JDK、Hadoop环境</li>\n<li>配置集群、历史服务器、日志服务器</li>\n<li>shell控制集群启停和jps情况</li>\n</ol>\n<h2 id=\"常用端口号说明⭐⭐\"><a href=\"#常用端口号说明⭐⭐\" class=\"headerlink\" title=\"常用端口号说明⭐⭐\"></a>常用端口号说明⭐⭐</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>端口名称</th>\n<th>Hadoop2.x</th>\n<th>Hadoop3.x</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NameNode内部通信端口</td>\n<td>8020 / 9000</td>\n<td>8020 / 9000/9820</td>\n</tr>\n<tr>\n<td>NameNode HTTP UI</td>\n<td>50070</td>\n<td>9870</td>\n</tr>\n<tr>\n<td>MapReduce查看执行任务端口</td>\n<td>8088</td>\n<td>8088</td>\n</tr>\n<tr>\n<td>历史服务器通信端口</td>\n<td>19888</td>\n<td>19888</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"常用配置文件⭐⭐\"><a href=\"#常用配置文件⭐⭐\" class=\"headerlink\" title=\"常用配置文件⭐⭐\"></a>常用配置文件⭐⭐</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>配置文件</th>\n<th>2.x</th>\n<th>3.x</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>核心配置文件</td>\n<td>core-site.xml</td>\n<td>core-site.xml</td>\n</tr>\n<tr>\n<td>HDFS配置文件</td>\n<td>hdfs-site.xml</td>\n<td>hdfs-site.xml</td>\n</tr>\n<tr>\n<td>YARN配置文件</td>\n<td>yarn-site.xml</td>\n<td>yarn-site.xml</td>\n</tr>\n<tr>\n<td>MapReduce配置文件</td>\n<td>mapred-site.xml</td>\n<td>mapred-site.xml</td>\n</tr>\n<tr>\n<td></td>\n<td>slaves</td>\n<td>workers</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"HDFS\"><a href=\"#HDFS\" class=\"headerlink\" title=\"HDFS\"></a>HDFS</h1><h2 id=\"HDFS概述\"><a href=\"#HDFS概述\" class=\"headerlink\" title=\"HDFS概述\"></a>HDFS概述</h2><p>HDFS（Hadoop Distributed File System），它是一个文件系统，用于存储文件，通过目录树来定位文件；其次，它是分布式的，由很多服务器联合起来实现其功能，集群中的服务器有各自的角色。</p>\n<p>HDFS的使用场景：适合一次写入，多次读出的场景。一个文件经过创建、写入和关闭之后就不需要改变。</p>\n<h3 id=\"HDFS优缺点\"><a href=\"#HDFS优缺点\" class=\"headerlink\" title=\"HDFS优缺点\"></a>HDFS优缺点</h3><p><strong>HDFS优点</strong></p>\n<p>1）    高容错性<br>➢    数据自动保存多个副本。它通过增加副本的形式，提高容错性。</p>\n<p>➢    某一个副本丢失以后，它可以自动恢复。</p>\n<p>2）    适合处理大数据<br>➢    数据规模：能够处理数据规模达到GB、TB、甚至PB级别的数据；<br>➢    文件规模：能够处理百万规模以上的文件数量，数量相当之大。<br>3）    可构建在廉价机器上，通过多副本机制，提高可靠性。</p>\n<p><strong>HDFS缺点</strong></p>\n<p>1）    不适合低延时数据访问，比如毫秒级的存储数据，是做不到的。<br>2）    无法高效的对大量小文件进行存储。<br>➢    存储大量小文件的话，它会占用NameNode大量的内存来存储文件目录和块信息。这样是不可取的，因为NameNode的内存总是有限的；<br>➢    小文件存储的寻址时间会超过读取时间，它违反了HDFS的设计目标。</p>\n<p>3）    不支持并发写入、文件随机修改。<br>➢    一个文件只能有一个写，不允许多个线程同时写；</p>\n<p>➢    仅支持数据append（追加），不支持文件的随机修改。</p>\n<h3 id=\"HDFS组成架构\"><a href=\"#HDFS组成架构\" class=\"headerlink\" title=\"HDFS组成架构\"></a>HDFS组成架构</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>HDFS组成架构</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NameNode（nn）</td>\n<td>就是Master，它是一个主管、管理者。</td>\n</tr>\n<tr>\n<td></td>\n<td>（1）    管理HDFS的名称空间；<br>（2）    配置副本策略；<br>（3）    管理数据块（Block）映射信息；<br>（4）    处理客户端读写请求。</td>\n</tr>\n<tr>\n<td>DataNode</td>\n<td>就是Slave。NameNode下达命令，DataNode执行实际的操作。</td>\n</tr>\n<tr>\n<td></td>\n<td>（1）    存储实际的数据块；<br>（2）    执行数据块的读/写操作。</td>\n</tr>\n<tr>\n<td>Client</td>\n<td>就是客户端。</td>\n</tr>\n<tr>\n<td></td>\n<td>（1）    文件切分。文件上传HDFS的时候，Client将文件切分成一个一个的Block，然后进行上传；<br>（2）    与NameNode交互，获取文件的位置信息；<br>（3）    与DataNode交互，读取或者写入数据；<br>（4）    Client提供一些命令来管理HDFS，比如NameNode格式化；</td>\n</tr>\n<tr>\n<td>Secondary NameNode</td>\n<td>并非NameNode的热备份，当NameNode挂掉的时候，它并不能马上替换NameNode并提供服务。</td>\n</tr>\n<tr>\n<td></td>\n<td>（1）    辅助NameNode，分担其工作量，比如定期合并Fsimage和Edits，并推送给NameNode ；<br>（2）    在紧急情况下，可辅助恢复NameNode。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"HDFS-文件块大小（面试重点）-⭐⭐\"><a href=\"#HDFS-文件块大小（面试重点）-⭐⭐\" class=\"headerlink\" title=\"HDFS 文件块大小（面试重点） ⭐⭐\"></a>HDFS 文件块大小（面试重点） ⭐⭐</h3><p>HDFS中的文件在物理上是分块存储（Block），块的大小可以通过配置参数<br>( dfs.blocksize）来规定，默认大小在Hadoop2.x/3.x版本中是128M，1.x版本中是64M。</p>\n<p>1）集群中的block</p>\n<p>2）如果寻址时间约为10ms，即查找到目标block的时间为10ms。<br>3）寻址时间为传输时间的1%时，则为最佳状态。（专家）因此，传输时间<br>=10ms/0.01=1000ms=1s<br>4）而目前磁盘的传输速率普遍为100MB/s。</p>\n<p>5） block大小<br>=1s*100MB/s=100MB</p>\n<p><strong>思考：为什么块的大小不能设置太小，也不能设置太大？</strong></p>\n<p>（1）    HDFS的块设置太小，会增加寻址时间，程序一直在找块的开始位置；<br>（2）    如果块设置的太大，从磁盘传输数据的时间会明显大于定位这个块开始位置所需的时间。导致程序在处理这块数据时，会非常慢。</p>\n<p>总结：HDFS块的大小设置主要取决于==磁盘传输速率==。</p>\n<h2 id=\"HDFS-的Shell-操作\"><a href=\"#HDFS-的Shell-操作\" class=\"headerlink\" title=\"HDFS 的Shell 操作\"></a>HDFS 的Shell 操作</h2><p>hadoop fs 具体命令  OR  hdfs dfs 具体命令 两个是完全相同的。 </p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 命令大全</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>cat <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>ignoreCrc<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>src<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>chgrp <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">]</span> GROUP PATH<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>chmod <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>MODE<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>MODE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">|</span> OCTALMODE<span class=\"token operator\">&gt;</span> PATH<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>chown <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>OWNER<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>GROUP<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> PATH<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>copyFromLocal <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>f<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>p<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>localsrc<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dst<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>copyToLocal <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>p<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>ignoreCrc<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>crc<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>src<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>localdst<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>count <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>path<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>cp <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>f<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>p<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>src<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dst<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>df <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>h<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>path<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>du <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>s<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>h<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>path<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>get <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>p<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>ignoreCrc<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>crc<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>src<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>localdst<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>getmerge <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>nl<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>src<span class=\"token punctuation\">&gt;</span></span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>localdst<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>help <span class=\"token punctuation\">[</span>cmd <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>ls <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>d<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>h<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>path<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>mkdir <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>p<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>path<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>moveFromLocal <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>localsrc<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dst<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>moveToLocal <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>src<span class=\"token punctuation\">&gt;</span></span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>localdst<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>mv <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>src<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dst<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>put <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>f<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>p<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>localsrc<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dst<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>rm <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>f<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>r<span class=\"token operator\">|</span><span class=\"token operator\">-</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>skipTrash<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>src<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>rmdir <span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>ignore<span class=\"token operator\">-</span>fail<span class=\"token operator\">-</span>on<span class=\"token operator\">-</span>non<span class=\"token operator\">-</span>empty<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dir<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>acl_spec<span class=\"token punctuation\">&gt;</span></span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>path<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>setrep <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>w<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>rep<span class=\"token punctuation\">&gt;</span></span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>path<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>stat <span class=\"token punctuation\">[</span>format<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>path<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>tail <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>f<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>file<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>test <span class=\"token operator\">-</span><span class=\"token punctuation\">[</span>defsz<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>path<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>text <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>ignoreCrc<span class=\"token punctuation\">]</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>src<span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>常用命令实操</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sbin/start-dfs.sh<br>sbin/start-yarn.sh</td>\n<td>启动Hadoop集群</td>\n</tr>\n<tr>\n<td>hadoop fs -help rm</td>\n<td>输出这个命令参数</td>\n</tr>\n<tr>\n<td>hadoop fs -mkdir /a</td>\n<td>创建/sanguo文件夹</td>\n</tr>\n<tr>\n<td>hadoop fs -moveFromLocal ./a.txt /a</td>\n<td>从本地剪切粘贴到HDFS</td>\n</tr>\n<tr>\n<td>hadoop fs -copyFromLocal a.txt /a</td>\n<td>从本地文件系统中拷贝文件到HDFS路径去</td>\n</tr>\n<tr>\n<td>hadoop fs -put ./a.txt /sangauo</td>\n<td>等同于copyFromLocal，生产环境更习惯用put</td>\n</tr>\n<tr>\n<td>hadoop fs -appendToFile a.txt /a/a.txt</td>\n<td>追加一个文件到已经存在的文件末尾</td>\n</tr>\n<tr>\n<td>hadoop fs -copyToLocal /a/a.txt ./</td>\n<td>从HDFS拷贝到本地</td>\n</tr>\n<tr>\n<td>hadoop fs -get /a/a.txt ./a.txt</td>\n<td>等同于copyToLocal，生产环境更习惯用get</td>\n</tr>\n<tr>\n<td>hadoop fs -ls /a</td>\n<td>显示目录信息</td>\n</tr>\n<tr>\n<td>hadoop fs -cat /a/a.txt</td>\n<td>显示文件内容</td>\n</tr>\n<tr>\n<td>hadoop fs -chmod 666</td>\n<td>-chgrp、-chmod、-chown：</td>\n</tr>\n<tr>\n<td>hadoop fs -chown yfr:yfr  /a/a.txt</td>\n<td>Linux文件系统中的用法一样，修改文件所属权限</td>\n</tr>\n<tr>\n<td>hadoop fs -mkdir /a</td>\n<td>创建路径</td>\n</tr>\n<tr>\n<td>hadoop fs -cp /a/a.txt /b</td>\n<td>从HDFS的一个路径拷贝到HDFS的另一个路径</td>\n</tr>\n<tr>\n<td>hadoop fs -mv /a/a.txt /b</td>\n<td>在HDFS目录中移动文件</td>\n</tr>\n<tr>\n<td>hadoop fs -tail /a/a.txt</td>\n<td>显示一个文件的末尾1kb的数据</td>\n</tr>\n<tr>\n<td>hadoop fs -rm /a/a.txt</td>\n<td>删除文件或文件夹</td>\n</tr>\n<tr>\n<td>hadoop fs -rm -r /a</td>\n<td>删除文件或文件夹</td>\n</tr>\n<tr>\n<td>hadoop fs -du -s -h /a</td>\n<td>递归删除目录及目录里面内容</td>\n</tr>\n<tr>\n<td>hadoop fs -du -h /a</td>\n<td>统计文件夹的大小信息</td>\n</tr>\n<tr>\n<td>hadoop fs -setrep 10 /a/a.txt</td>\n<td>设置HDFS中文件的副本数量</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"HDFS的API操作\"><a href=\"#HDFS的API操作\" class=\"headerlink\" title=\"HDFS的API操作\"></a>HDFS的API操作</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//HDFS文件上传</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testCopyFromLocalFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">URISyntaxException</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 1 获取文件系统</span>\n    <span class=\"token class-name\">Configuration</span> configuration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    configuration<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dfs.replication\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">FileSystem</span> fs <span class=\"token operator\">=</span> <span class=\"token class-name\">FileSystem</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">URI</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hdfs://hadoop102:8020\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> configuration<span class=\"token punctuation\">,</span> <span class=\"token string\">\"atguigu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 2 上传文件</span>\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">copyFromLocalFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d:/sunwukong.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/xiyou/huaguoshan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 3 关闭资源</span>\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n｝<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//HDFS文件下载</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testCopyToLocalFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">URISyntaxException</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 1 获取文件系统</span>\n    <span class=\"token class-name\">Configuration</span> configuration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">FileSystem</span> fs <span class=\"token operator\">=</span> <span class=\"token class-name\">FileSystem</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">URI</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hdfs://hadoop102:8020\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> configuration<span class=\"token punctuation\">,</span> <span class=\"token string\">\"atguigu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// 2 执行下载操作</span>\n    <span class=\"token comment\">// boolean delSrc 指是否将原文件删除</span>\n    <span class=\"token comment\">// Path src 指要下载的文件路径</span>\n    <span class=\"token comment\">// Path dst 指将文件下载到的路径</span>\n    <span class=\"token comment\">// boolean useRawLocalFileSystem 是否开启文件校验</span>\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">copyToLocalFile</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/xiyou/huaguoshan/sunwukong.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d:/sunwukong2.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// 3 关闭资源</span>\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//HDFS更名和移动</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testRename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">URISyntaxException</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\">// 1 获取文件系统</span>\n\t<span class=\"token class-name\">Configuration</span> configuration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">FileSystem</span> fs <span class=\"token operator\">=</span> <span class=\"token class-name\">FileSystem</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">URI</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hdfs://hadoop102:8020\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> configuration<span class=\"token punctuation\">,</span> <span class=\"token string\">\"atguigu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t\n\t<span class=\"token comment\">// 2 修改文件名称</span>\n\tfs<span class=\"token punctuation\">.</span><span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/xiyou/huaguoshan/sunwukong.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/xiyou/huaguoshan/meihouwang.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t<span class=\"token comment\">// 3 关闭资源</span>\n\tfs<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//HDFS删除文件和目录</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testDelete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">URISyntaxException</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\">// 1 获取文件系统</span>\n\t<span class=\"token class-name\">Configuration</span> configuration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">FileSystem</span> fs <span class=\"token operator\">=</span> <span class=\"token class-name\">FileSystem</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">URI</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hdfs://hadoop102:8020\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> configuration<span class=\"token punctuation\">,</span> <span class=\"token string\">\"atguigu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t<span class=\"token comment\">// 2 执行删除</span>\n\tfs<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/xiyou\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t<span class=\"token comment\">// 3 关闭资源</span>\n\tfs<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//查看文件名称、权限、长度、块信息</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testListFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">URISyntaxException</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\">// 1获取文件系统</span>\n\t<span class=\"token class-name\">Configuration</span> configuration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">FileSystem</span> fs <span class=\"token operator\">=</span> <span class=\"token class-name\">FileSystem</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">URI</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hdfs://hadoop102:8020\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> configuration<span class=\"token punctuation\">,</span> <span class=\"token string\">\"atguigu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// 2 获取文件详情</span>\n\t<span class=\"token class-name\">RemoteIterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LocatedFileStatus</span><span class=\"token punctuation\">&gt;</span></span> listFiles <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">listFiles</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>listFiles<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">LocatedFileStatus</span> fileStatus <span class=\"token operator\">=</span> listFiles<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"========\"</span> <span class=\"token operator\">+</span> fileStatus<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"=========\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>fileStatus<span class=\"token punctuation\">.</span><span class=\"token function\">getPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>fileStatus<span class=\"token punctuation\">.</span><span class=\"token function\">getOwner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>fileStatus<span class=\"token punctuation\">.</span><span class=\"token function\">getGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>fileStatus<span class=\"token punctuation\">.</span><span class=\"token function\">getLen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>fileStatus<span class=\"token punctuation\">.</span><span class=\"token function\">getModificationTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>fileStatus<span class=\"token punctuation\">.</span><span class=\"token function\">getReplication</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>fileStatus<span class=\"token punctuation\">.</span><span class=\"token function\">getBlockSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>fileStatus<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">// 获取块信息</span>\n\t\t<span class=\"token class-name\">BlockLocation</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> blockLocations <span class=\"token operator\">=</span> fileStatus<span class=\"token punctuation\">.</span><span class=\"token function\">getBlockLocations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>blockLocations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">// 3 关闭资源</span>\n\tfs<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//HDFS文件和文件夹判断</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testListStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">URISyntaxException</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 1 获取文件配置信息</span>\n    <span class=\"token class-name\">Configuration</span> configuration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">FileSystem</span> fs <span class=\"token operator\">=</span> <span class=\"token class-name\">FileSystem</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">URI</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hdfs://hadoop102:8020\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> configuration<span class=\"token punctuation\">,</span> <span class=\"token string\">\"atguigu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 2 判断是文件还是文件夹</span>\n    <span class=\"token class-name\">FileStatus</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> listStatus <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">listStatus</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FileStatus</span> fileStatus <span class=\"token operator\">:</span> listStatus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token comment\">// 如果是文件</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileStatus<span class=\"token punctuation\">.</span><span class=\"token function\">isFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"f:\"</span><span class=\"token operator\">+</span>fileStatus<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d:\"</span><span class=\"token operator\">+</span>fileStatus<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 3 关闭资源</span>\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"HDFS的读写流程（面试重点）⭐⭐\"><a href=\"#HDFS的读写流程（面试重点）⭐⭐\" class=\"headerlink\" title=\"HDFS的读写流程（面试重点）⭐⭐\"></a>HDFS的读写流程（面试重点）⭐⭐</h2><h3 id=\"HDFS写数据流程\"><a href=\"#HDFS写数据流程\" class=\"headerlink\" title=\"HDFS写数据流程\"></a>HDFS写数据流程</h3><p><img src=\"https://img-blog.csdnimg.cn/c93113474e434943a81881479f4165b1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"\"></p>\n<p>（1）客户端通过Distributed FileSystem模块向NameNode请求上传文件，NameNode检查目标文件是否已存在，父目录是否存在。<br>（2）NameNode返回是否可以上传。<br>（3）客户端请求第一个 Block上传到哪几个DataNode服务器上。<br>（4）NameNode返回3个DataNode节点，分别为dn1、dn2、dn3。<br>（5）客户端通过FSDataOutputStream模块请求dn1上传数据，dn1收到请求会继续调用dn2，然后dn2调用dn3，将这个通信管道建立完成。<br>（6）dn1、dn2、dn3逐级应答客户端。<br>（7）客户端开始往dn1上传第一个Block（先从磁盘读取数据放到一个本地内存缓存），以Packet为单位，dn1收到一个Packet就会传给dn2，dn2传给dn3；dn1每传一个packet会放入一个应答队列等待应答。<br>（8）当一个Block传输完成之后，客户端再次请求NameNode上传第二个Block的服务器。（重复执行3-7步）。</p>\n<h3 id=\"网络拓扑-节点距离计算\"><a href=\"#网络拓扑-节点距离计算\" class=\"headerlink\" title=\"网络拓扑-节点距离计算\"></a>网络拓扑-节点距离计算</h3><p>节点距离：两个节点到达最近的共同祖先的距离总和。 </p>\n<p>例如，假设有数据中心 d1 机架 r1 中的节点 n1。该节点可以表示为/d1/r1/n1。利用这种标记，这里给出四种距离描述。 </p>\n<p>Distance(/d1/r1/n0, /d1/r1/n0)=0（同一节点上的进程）<br>Distance(/d1/r1/n1, /d1/r1/n2)=2（同一机架上的不同节点）<br>Distance(/d1/r2/n0, /d1/r3/n2)=4（同一数据中心不同机架上的节点）<br>Distance(/d1/r2/n1, /d2/r4/n1)=6（不同数据中心的节点）</p>\n<h3 id=\"Hadoop3-1-3副本节点选择\"><a href=\"#Hadoop3-1-3副本节点选择\" class=\"headerlink\" title=\"Hadoop3.1.3副本节点选择\"></a>Hadoop3.1.3副本节点选择</h3><p>第一个副本在Client所处的节点上。如果客户端在集群外，随机选一个。<br>第二个副本在另一个机架的随机一个节点<br>第三个副本在第二个副本所在机架的随机节点</p>\n<h3 id=\"HDFS的读数据流程\"><a href=\"#HDFS的读数据流程\" class=\"headerlink\" title=\"HDFS的读数据流程\"></a>HDFS的读数据流程</h3><p><img src=\"https://img-blog.csdnimg.cn/2c70058194ec4d9ba5fd11a9c2562f91.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"\"></p>\n<p>（1）客户端通过DistributedFileSystem向NameNode请求下载文件，NameNode通过查询元数据，找到文件块所在的DataNode地址。<br>（2）挑选一台DataNode（就近原则，然后随机）服务器，请求读取数据。<br>（3）DataNode开始传输数据给客户端（从磁盘里面读取数据输入流，以Packet为单位来做校验）。<br>（4）客户端以Packet为单位接收，先在本地缓存，然后写入目标文件。</p>\n<h2 id=\"NameNode和SecondaryNameNode\"><a href=\"#NameNode和SecondaryNameNode\" class=\"headerlink\" title=\"NameNode和SecondaryNameNode\"></a>NameNode和SecondaryNameNode</h2><p><strong>思考：NameNode中的元数据是存储在哪里的？</strong><br>        首先，我们做个假设，如果存储在NameNode节点的磁盘中，因为经常需要进行随机访问，还有响应客户请求，必然是效率过低。因此，==元数据需要存放在内存中==。但如果只存在内存中，一旦断电，元数据丢失，整个集群就无法工作了。因此产生在==磁盘中备份元数据的FsImage==。<br>        这样又会带来新的问题，当在内存中的元数据更新时，如果同时更新FsImage，就会导致效率过低，但如果不更新，就会发生一致性问题，一旦NameNode节点断电，就会产生数据丢失。因此，引入Edits文件（只进行追加操作，效率很高）。==每当元数据有更新或者添加元数据时，修改内存中的元数据并追加到Edits中==。这样，一旦NameNode节点断电，可以通过FsImage和Edits的合并，合成元数据。<br>        但是，如果长时间添加数据到Edits中，会导致该文件数据过大，效率降低，而且一旦断电，恢复元数据需要的时间过长。因此，需要==定期进行FsImage和Edits的合并==，如果这个操作由NameNode节点完成，又会效率过低。因此，引入一个新的节点==SecondaryNamenode，专门用于FsImage和Edits的合并==。</p>\n<h3 id=\"NN和2NN工作机制\"><a href=\"#NN和2NN工作机制\" class=\"headerlink\" title=\"NN和2NN工作机制\"></a>NN和2NN工作机制</h3><p><img src=\"https://img-blog.csdnimg.cn/298d61e4ce994a79895396fc96ee18a6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"\"></p>\n<p>1）第一阶段：NameNode启动<br>（1）第一次启动NameNode格式化后，创建Fsimage和Edits文件。如果不是第一次启动，直接加载编辑日志和镜像文件到内存。<br>（2）客户端对元数据进行增删改的请求。<br>（3）NameNode记录操作日志，更新滚动日志。<br>（4）NameNode在内存中对元数据进行增删改。</p>\n<p>2）第二阶段：Secondary NameNode工作<br>（1）Secondary NameNode询问NameNode是否需要CheckPoint。直接带回NameNode是否检查结果。<br>（2）Secondary NameNode请求执行CheckPoint。<br>（3）NameNode滚动正在写的Edits日志。<br>（4）将滚动前的编辑日志和镜像文件拷贝到Secondary NameNode。<br>（5）Secondary NameNode加载编辑日志和镜像文件到内存，并合并。<br>（6）生成新的镜像文件fsimage.chkpoint。<br>（7）拷贝fsimage.chkpoint到NameNode。<br>（8）NameNode将fsimage.chkpoint重新命名成fsimage。</p>\n<p><strong>Fsimage和Edits概念</strong></p>\n<p>（1）Fsimage文件：HDFS文件系统元数据的一个永久性的检查点，其中包含HDFS文件系统的所有目录和文件inode的序列化信息。<br>（2）Edits文件：存放HDFS文件系统的所有更新操作的路径，文件系统客户端执行的所有写操作首先会被记录到Edits文件中。<br>（3）seen_txid文件保存的是一个数字，就是最后一个edits_的数字<br>（4）每次NameNode启动的时候都会将Fsimage文件读入内存，加载Edits里面的更新操作，保证内存中的元数据信息是最新的、同步的，可以看成NameNode启动的时候就将Fsimage和Edits文件进行了合并。</p>\n<p><strong>查看oiv 和oev 命令</strong></p>\n<p>查看fsimage：hdfs oiv -p 文件类型 -i 镜像文件 -o 转换后文件输出路径 </p>\n<p>查看edits：hdfs oev -p 文件类型 -i编辑日志 -o 转换后文件输出路径</p>\n<h2 id=\"DataNode\"><a href=\"#DataNode\" class=\"headerlink\" title=\"DataNode\"></a>DataNode</h2><h3 id=\"DataNode-工作机制\"><a href=\"#DataNode-工作机制\" class=\"headerlink\" title=\"DataNode 工作机制\"></a>DataNode 工作机制</h3><p><img src=\"https://img-blog.csdnimg.cn/3e672ef6e14b42569128e1d1a66f390c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"\"></p>\n<p>（1）一个数据块在DataNode上以文件形式存储在磁盘上，包括两个文件，一个是数据本身，一个是元数据包括数据块的长度，块数据的校验和，以及时间戳。<br>（2）DataNode启动后向NameNode注册，通过后，周期性（6小时）的向NameNode上报所有的块信息。</p>\n<ul>\n<li>DN向NN汇报当前解读信息的时间间隔，默认6小时；</li>\n<li>DN扫描自己节点块信息列表的时间，默认6小时</li>\n</ul>\n<p>（3）心跳是每3秒一次，心跳返回结果带有NameNode给该DataNode的命令如复制块数据到另一台机器，或删除某个数据块。如果超过10分钟没有收到某个DataNode的心跳，则认为该节点不可用。<br>（4）集群运行中可以安全加入和退出一些机器。</p>\n<h3 id=\"DataNode节点保证数据完整性的方法：\"><a href=\"#DataNode节点保证数据完整性的方法：\" class=\"headerlink\" title=\"DataNode节点保证数据完整性的方法：\"></a><strong>DataNode节点保证数据完整性的方法：</strong></h3><p>（1）当DataNode读取Block的时候，它会计算CheckSum。<br>（2）如果计算后的CheckSum，与Block创建时值不一样，说明Block已经损坏。<br>（3）Client读取其他DataNode上的Block。<br>（4）常见的校验算法crc（32），md5（128），sha1（160）<br>（5）DataNode在其文件创建后周期验证CheckSum。</p>\n<h3 id=\"DataNode掉线时限参数设置\"><a href=\"#DataNode掉线时限参数设置\" class=\"headerlink\" title=\"DataNode掉线时限参数设置\"></a>DataNode掉线时限参数设置</h3><p>1、DataNode进程死亡或者网络故障造成DataNode无法与NameNode通信<br>2、NameNode不会立即把该节点判定为死亡，要经过一段时间，这段时间暂称作超时时长。<br>3、HDFS默认的超时时长为10分钟+30秒。<br>4、如果定义超时时间为TimeOut，则超时时长的计算公式为：<br>TimeOut = 2 <em> dfs.namenode.heartbeat.recheck-interval + 10 </em> dfs.heartbeat.interval。<br>而默认的dfs.namenode.heartbeat.recheck-interval 大小为5分钟，dfs.heartbeat.interval默认为3秒。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>web</th>\n<th>服务</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HDFS</td>\n<td>9870</td>\n<td>8020</td>\n</tr>\n<tr>\n<td>YARN</td>\n<td>8088</td>\n<td>8032</td>\n</tr>\n<tr>\n<td>history</td>\n<td>19888</td>\n<td>10020</td>\n</tr>\n</tbody>\n</table>\n</div>\n","text":"大数据概念大数据（Big Data）：指无法在一定时间范围内用常规软件工具进行捕捉、管理和处理的数据集合，是需要新处理模式才能具有更强的决策力、洞察发现力和流程优化能力的海量、高增长率和多样化的信息资产。大数据主要解决，海量数据的采集、存储和分析计算问题。 ⭐大数据特点（4V） ...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"大数据","slug":"大数据","count":4,"path":"api/categories/大数据.json"}],"tags":[{"name":"Hadoop","slug":"Hadoop","count":2,"path":"api/tags/Hadoop.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">大数据概念</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Hadoop-%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">Hadoop 概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Hadoop-%E4%BC%98%E5%8A%BF%EF%BC%884-%E9%AB%98%EF%BC%89\"><span class=\"toc-text\">Hadoop 优势（4 高）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Hadoop-%E7%BB%84%E6%88%90%EF%BC%88%E9%9D%A2%E8%AF%95%E9%87%8D%E7%82%B9%EF%BC%89-%E2%AD%90%E2%AD%90\"><span class=\"toc-text\">Hadoop 组成（面试重点） ⭐⭐</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#HDFS-%E6%9E%B6%E6%9E%84%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">HDFS 架构概述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#YARN-%E6%9E%B6%E6%9E%84%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">YARN 架构概述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MapReduce-%E6%9E%B6%E6%9E%84%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">MapReduce 架构概述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E7%94%9F%E6%80%81%E4%BD%93%E7%B3%BB\"><span class=\"toc-text\">大数据技术生态体系</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Hadoop-%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%EF%BC%88%E5%BC%80%E5%8F%91%E9%87%8D%E7%82%B9%EF%BC%89\"><span class=\"toc-text\">Hadoop 运行环境搭建（开发重点）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87\"><span class=\"toc-text\">基础环境准备</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Hadoop-%E8%BF%90%E8%A1%8C%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">Hadoop 运行模式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E5%9C%B0%E8%BF%90%E8%A1%8C%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">本地运行模式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E5%85%A8%E5%88%86%E5%B8%83%E5%BC%8F%E8%BF%90%E8%A1%8C%E6%A8%A1%E5%BC%8F%EF%BC%88%E5%BC%80%E5%8F%91%E9%87%8D%E7%82%B9%EF%BC%89%E2%AD%90%E2%AD%90%E2%AD%90\"><span class=\"toc-text\">完全分布式运行模式（开发重点）⭐⭐⭐</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E5%8F%B7%E8%AF%B4%E6%98%8E%E2%AD%90%E2%AD%90\"><span class=\"toc-text\">常用端口号说明⭐⭐</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E2%AD%90%E2%AD%90\"><span class=\"toc-text\">常用配置文件⭐⭐</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#HDFS\"><span class=\"toc-text\">HDFS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#HDFS%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">HDFS概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HDFS%E4%BC%98%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">HDFS优缺点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HDFS%E7%BB%84%E6%88%90%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">HDFS组成架构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HDFS-%E6%96%87%E4%BB%B6%E5%9D%97%E5%A4%A7%E5%B0%8F%EF%BC%88%E9%9D%A2%E8%AF%95%E9%87%8D%E7%82%B9%EF%BC%89-%E2%AD%90%E2%AD%90\"><span class=\"toc-text\">HDFS 文件块大小（面试重点） ⭐⭐</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#HDFS-%E7%9A%84Shell-%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">HDFS 的Shell 操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#HDFS%E7%9A%84API%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">HDFS的API操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#HDFS%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B%EF%BC%88%E9%9D%A2%E8%AF%95%E9%87%8D%E7%82%B9%EF%BC%89%E2%AD%90%E2%AD%90\"><span class=\"toc-text\">HDFS的读写流程（面试重点）⭐⭐</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HDFS%E5%86%99%E6%95%B0%E6%8D%AE%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">HDFS写数据流程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BD%91%E7%BB%9C%E6%8B%93%E6%89%91-%E8%8A%82%E7%82%B9%E8%B7%9D%E7%A6%BB%E8%AE%A1%E7%AE%97\"><span class=\"toc-text\">网络拓扑-节点距离计算</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Hadoop3-1-3%E5%89%AF%E6%9C%AC%E8%8A%82%E7%82%B9%E9%80%89%E6%8B%A9\"><span class=\"toc-text\">Hadoop3.1.3副本节点选择</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HDFS%E7%9A%84%E8%AF%BB%E6%95%B0%E6%8D%AE%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">HDFS的读数据流程</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#NameNode%E5%92%8CSecondaryNameNode\"><span class=\"toc-text\">NameNode和SecondaryNameNode</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#NN%E5%92%8C2NN%E5%B7%A5%E4%BD%9C%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">NN和2NN工作机制</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#DataNode\"><span class=\"toc-text\">DataNode</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DataNode-%E5%B7%A5%E4%BD%9C%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">DataNode 工作机制</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DataNode%E8%8A%82%E7%82%B9%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E5%AE%8C%E6%95%B4%E6%80%A7%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">DataNode节点保证数据完整性的方法：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DataNode%E6%8E%89%E7%BA%BF%E6%97%B6%E9%99%90%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">DataNode掉线时限参数设置</span></a></li></ol></li></ol></li></ol>","author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Linux基础","uid":"144f0b4d9b9f80ea377106e9c6a54a45","slug":"B0-Linux基础","date":"2021-11-16T08:35:41.000Z","updated":"2021-11-16T09:04:08.607Z","comments":true,"path":"api/articles/B0-Linux基础.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/c2607b79df8149799253f31133417976.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center","text":"Linux概述Linux的创始人:Linus Torvalds 林纳斯 Linux主要的发行版:Ubuntu(乌班图)、RedHat(红帽)、CentOS、Debain[蝶变]、Fedora、SuSE、OpenSUSE Linux由Unix发展而来。 linux与windows区...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"大数据","slug":"大数据","count":4,"path":"api/categories/大数据.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}],"author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"反射、新特性","uid":"9a9e7d03fd63b8b9dd7648918fd31ad5","slug":"J6-反射、新特性","date":"2021-11-12T02:31:21.000Z","updated":"2021-11-12T08:13:39.364Z","comments":true,"path":"api/articles/J6-反射、新特性.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/64f64be78a9b4ed28b7623027f591b4b.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center","text":"1. Java反射机制1.1 Java反射机制概述1.2 理解Class类并获取Class实例1.3 类的加载与ClassLoader的理解1.4 创建运行时类的对象1.5 获取运行时类的完整结构1.6 调用运行时类的指定结构1.7 反射的应用：动态代理2. Java8的其它新特...","link":"","photos":[],"count_time":{"symbolsCount":297,"symbolsTime":"1 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":6,"path":"api/categories/JAVA.json"}],"tags":[{"name":"java","slug":"java","count":6,"path":"api/tags/java.json"}],"author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}}}}