{"title":"数组","uid":"e16187d7a3c490f96b788338bdd79d24","slug":"J5-数组","date":"2021-11-05T03:24:52.000Z","updated":"2021-11-05T05:49:43.975Z","comments":true,"path":"api/articles/J5-数组.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/ce3cebf7632b4003bbd0eca49e0b1a6b.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16","content":"<h1 id=\"Java数组\"><a href=\"#Java数组\" class=\"headerlink\" title=\"Java数组\"></a>Java数组</h1><p>数组(Array)，是多个相同类型数据按一定顺序排列的集合，并使用一个名字命名，并通过编号的方式对这些数据进行统一管理。</p>\n<p>数组的常见概念</p>\n<ol>\n<li>数组名</li>\n<li>下标(或索引)</li>\n<li>元素</li>\n<li>数组的长度</li>\n</ol>\n<h3 id=\"一维数组的创建与使用\"><a href=\"#一维数组的创建与使用\" class=\"headerlink\" title=\"一维数组的创建与使用\"></a>一维数组的创建与使用</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 一维数组的声明方式：</span>\ntype <span class=\"token keyword\">var</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> 或 type<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token keyword\">var</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//Java语言中声明数组时不能指定其长度(数组中元素的数)， 例如： </span>\n<span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//非法</span>\n<span class=\"token comment\">//动态初始化：数组声明且为数组元素分配空间与赋值的操作分开进行</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> names<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> names <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//静态初始化：在定义数组的同时就为数组元素分配空间并赋值。</span>\n<span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 属性length</span>\na<span class=\"token punctuation\">.</span>length 指明数组a的长度<span class=\"token punctuation\">(</span>元素个数<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>数组是引用类型，它的元素相当于类的成员变量，因此数组一经分配空间，其中的每个元素也被按照成员变量同样的方式被隐式初始化。</p>\n<ul>\n<li>对于基本数据类型而言，默认初始化值各有不同</li>\n<li>对于引用数据类型而言，默认初始化值为null(注意与0不同！</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/ba87a0244fda4b63b03fcc07b709aa02.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/1714833d1201408c917295f51da19d01.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/aa354e98937244fb914c6b422fa325d2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/6d9b3347b1624d8a81326d57e1b1cdd9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/09eb7f16ffe7413eb99ed0d0709a5898.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"\"></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>数组元素类型</th>\n<th>元素默认初始值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>byte</td>\n<td>0</td>\n</tr>\n<tr>\n<td>short</td>\n<td>0</td>\n</tr>\n<tr>\n<td>int</td>\n<td>0</td>\n</tr>\n<tr>\n<td>long</td>\n<td>0L</td>\n</tr>\n<tr>\n<td>float</td>\n<td>0.0F</td>\n</tr>\n<tr>\n<td>double</td>\n<td>0.0</td>\n</tr>\n<tr>\n<td>char</td>\n<td>0 或写为:’\\u0000’(表现为空)</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>引用类型</td>\n<td>null</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"for-each循环\"><a href=\"#for-each循环\" class=\"headerlink\" title=\"for each循环\"></a>for each循环</h2><p>依次处理数组中的每个元素（其他类型的元素集合亦可）而不必为指定下标值而分心。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">:</span> collection<span class=\"token punctuation\">)</span> statement<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> ints <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> anInt <span class=\"token operator\">:</span> ints<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"数组的拷贝\"><a href=\"#数组的拷贝\" class=\"headerlink\" title=\"数组的拷贝\"></a>数组的拷贝</h2><p>将一个数组变量拷贝给另一个数组变量。这时，两个变量将引用同一个数组：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> ints <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>将一个数组的所有值拷贝到一个新的数组中去，就要使用Arrays类的copyOf方法：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyof</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"多维数组\"><a href=\"#多维数组\" class=\"headerlink\" title=\"多维数组\"></a>多维数组</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 格式1（动态初始化）：</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 格式2（动态初始化）：</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 每个一维数组都是默认初始化值null (注意：区别于格式1）可以对这个三个一维数组分别进行初始化</span>\narr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>    \narr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   \narr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n注：<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//非法</span>\n<span class=\"token comment\">// 格式3（静态初始化）：</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 注意特殊写法情况：</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> x是一维数组，y是二维数组。\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 声明：int[] x,y[]; 在给x,y变量赋值以后，以下选项允许通过编译的是：</span>\nx<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>  no\ny<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>   yes\ny<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>   no\nx<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>  no\ny<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  yes\nx <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>   no\n<span class=\"token comment\">// 提示：</span>\n一维数组：<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> x  或者<span class=\"token keyword\">int</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>   \n二维数组：<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> y 或者 <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> y<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  或者 <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"数组的默认初始化与内存分析\"><a href=\"#数组的默认初始化与内存分析\" class=\"headerlink\" title=\"数组的默认初始化与内存分析\"></a>数组的默认初始化与内存分析</h2><h2 id=\"操作数组的工具类Arrays\"><a href=\"#操作数组的工具类Arrays\" class=\"headerlink\" title=\"操作数组的工具类Arrays\"></a>操作数组的工具类Arrays</h2><p>java.util.Arrays类即为操作数组的工具类，包含了用来操作数组（比如排序和搜索）的各种方法。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>工具类Arrays</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>boolean equals(int[] a,int[] b)</td>\n<td>判断两个数组是否相等。</td>\n</tr>\n<tr>\n<td>String toString(int[] a)</td>\n<td>输出数组信息。</td>\n</tr>\n<tr>\n<td>void fill(int[] a,int val)</td>\n<td>将指定值填充到数组之中。</td>\n</tr>\n<tr>\n<td>void sort(int[] a)</td>\n<td>对数组进行排序。</td>\n</tr>\n<tr>\n<td>int binarySearch(int[] a,int key)</td>\n<td>对排序后的数组进行二分法检索指定的值。</td>\n</tr>\n<tr>\n<td>static type copyOf(type[] a, int length)</td>\n<td></td>\n</tr>\n<tr>\n<td>static type copyOfRange(type[] a, int start, int end)</td>\n<td></td>\n</tr>\n<tr>\n<td>static void sort(type[] a)</td>\n<td>优化的快速排序算法</td>\n</tr>\n<tr>\n<td>static int binarySearch(type[] a, type v)</td>\n<td></td>\n</tr>\n<tr>\n<td>static int binarySearch(type[] a, int start, int end, type v)</td>\n<td>二分搜索算法查找值v</td>\n</tr>\n<tr>\n<td>static void fill(type[] a, type v)</td>\n<td>将数组的所有数据元素值设置为v。</td>\n</tr>\n<tr>\n<td>static boolean equals(type[] a, type[] b)</td>\n<td>如果两个数组大小相同，并且下标相同的元素都对应相等，返回true。</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>\n","text":"Java数组数组(Array)，是多个相同类型数据按一定顺序排列的集合，并使用一个名字命名，并通过编号的方式对这些数据进行统一管理。 数组的常见概念 数组名 下标(或索引) 元素 数组的长度 一维数组的创建与使用// 一维数组的声明方式： type var[] 或 type[] ...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":7,"path":"api/categories/JAVA.json"}],"tags":[{"name":"java","slug":"java","count":7,"path":"api/tags/java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Java%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">Java数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">一维数组的创建与使用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#for-each%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">for each循环</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E7%9A%84%E6%8B%B7%E8%B4%9D\"><span class=\"toc-text\">数组的拷贝</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">多维数组</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E7%9A%84%E9%BB%98%E8%AE%A4%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%8E%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90\"><span class=\"toc-text\">数组的默认初始化与内存分析</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E6%95%B0%E7%BB%84%E7%9A%84%E5%B7%A5%E5%85%B7%E7%B1%BBArrays\"><span class=\"toc-text\">操作数组的工具类Arrays</span></a></li></ol></li></ol>","author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"J5.对象与类","uid":"f8534e8f12d0bc66698739d3b7153c65","slug":"J6-对象与类","date":"2021-11-05T06:23:36.000Z","updated":"2021-11-05T11:49:13.278Z","comments":true,"path":"api/articles/J6-对象与类.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/ce3cebf7632b4003bbd0eca49e0b1a6b.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16","text":"面向对象编程OOP类(Class)和对象(Object)是面向对象的核心概念。 类是对一类事物的描述，是抽象的、概念上的定义 对象是实际存在的该类事物的每个个体，因而也称为实例(instance)。 属 性：对应类中的成员变量 行 为：对应类中的成员方法 由类构造（constru...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":7,"path":"api/categories/JAVA.json"}],"tags":[{"name":"java","slug":"java","count":7,"path":"api/tags/java.json"}],"author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"控制流程","uid":"1d98d63915f551c9747efb3393617836","slug":"J4-控制流程","date":"2021-11-05T02:34:28.000Z","updated":"2021-11-05T03:18:09.648Z","comments":true,"path":"api/articles/J4-控制流程.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/ce3cebf7632b4003bbd0eca49e0b1a6b.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16","text":"块作用域 Block块（即复合语句）是指由一对大括号括起来的若干条简单的Java语句。块确定了变量的作用域。一个块可以嵌套在另一个块中。 注意： 不能在嵌套的两个块中声明同名的变量。 块内定义的变量块外不能使用。 流程控制语句 流程控制 顺序结构 分支语句 if-else、swi...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":7,"path":"api/categories/JAVA.json"}],"tags":[{"name":"java","slug":"java","count":7,"path":"api/tags/java.json"}],"author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}}}}