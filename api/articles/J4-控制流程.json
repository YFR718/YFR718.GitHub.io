{"title":"控制流程","uid":"1d98d63915f551c9747efb3393617836","slug":"J4-控制流程","date":"2021-11-05T02:34:28.000Z","updated":"2021-11-05T03:18:09.648Z","comments":true,"path":"api/articles/J4-控制流程.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/ce3cebf7632b4003bbd0eca49e0b1a6b.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16","content":"<h1 id=\"块作用域-Block\"><a href=\"#块作用域-Block\" class=\"headerlink\" title=\"块作用域 Block\"></a>块作用域 Block</h1><p>块（即复合语句）是指由一对大括号括起来的若干条简单的Java语句。块确定了变量的作用域。一个块可以嵌套在另一个块中。</p>\n<p><strong>注意：</strong></p>\n<ol>\n<li>不能在嵌套的两个块中声明同名的变量。</li>\n<li>块内定义的变量块外不能使用。</li>\n<li></li>\n</ol>\n<h1 id=\"流程控制语句\"><a href=\"#流程控制语句\" class=\"headerlink\" title=\"流程控制语句\"></a>流程控制语句</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>流程控制</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>顺序结构</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>分支语句</td>\n<td>if-else、switch-case</td>\n<td></td>\n</tr>\n<tr>\n<td>循环结构</td>\n<td>for、while、do-while</td>\n<td></td>\n</tr>\n<tr>\n<td>特殊流程控制语句</td>\n<td>break、continue、return</td>\n</tr>\n</tbody>\n</table>\n</div>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>case标签可以是：</p>\n<p>● 类型为char、byte、short或int的常量表达式。</p>\n<p>● 枚举常量。</p>\n<p>● 从Java SE 7开始，case标签还可以是字符串字面量。</p>\n<h2 id=\"带标签的break语句\"><a href=\"#带标签的break语句\" class=\"headerlink\" title=\"带标签的break语句\"></a>带标签的break语句</h2><p>有时候，在嵌套很深的循环语句中会发生一些不可预料的事情。此时可能更加希望跳到嵌套的所有循环语句之外。通过添加一些额外的条件判断实现各层循环的检测很不方便。</p>\n<p>这里有一个示例说明了break语句的工作状态。请注意，标签必须放在希望跳出的最外层循环之前，并且必须紧跟一个冒号。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">label<span class=\"token operator\">:</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span> label<span class=\"token punctuation\">;</span> <span class=\"token comment\">// exits b1ock</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"大数值\"><a href=\"#大数值\" class=\"headerlink\" title=\"大数值\"></a>大数值</h1><p>如果基本的整数和浮点数精度不能够满足需求，那么可以使用java.math包中的两个很有用的类：BigInteger和BigDecimal。这两个类可以处理包含任意长度数字序列的数值。BigInteger类实现了任意精度的整数运算，BigDecimal实现了任意精度的浮点数运算。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">//使用静态的valueOf方法可以将普通的数值转换为大数值\nBigInteger a = BigInteger.valueOf(999999999999999999l);\n\n//使用大数值类中的add和multiply方法。\nBigInteger d = a.multiply(a);\nSystem.out.println(d);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>BigInteger</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>BigInteger add(BigInteger other)</td>\n<td>+</td>\n</tr>\n<tr>\n<td>BigInteger subtract(BigInteger other)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>BigInteger multiply(BigInteger other)</td>\n<td>*</td>\n</tr>\n<tr>\n<td>BigInteger divide(BigInteger other)</td>\n<td>/</td>\n</tr>\n<tr>\n<td>BigInteger divide(BigInteger other)</td>\n<td>%</td>\n</tr>\n<tr>\n<td>int compareTo(BigInteger other)</td>\n<td>相等，返回0；小于，返回负数；否则，返回正数。</td>\n</tr>\n<tr>\n<td>static BigInteger valueOf(long x)</td>\n<td>返回值等于x的大整数。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>BigInteger</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>BigDecimal add(BigDecimal other)</td>\n<td>+</td>\n</tr>\n<tr>\n<td>BigDecimal subtract(BigDecimal other)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>BigDecimal multiply(BigDecimal other)</td>\n<td>*</td>\n</tr>\n<tr>\n<td>BigDecimal multiply(BigDecimal other)</td>\n<td>/</td>\n</tr>\n<tr>\n<td>int compareTo(BigDecimal other)</td>\n<td>比较</td>\n</tr>\n<tr>\n<td>static BigDecimal valueOf(long x)</td>\n<td></td>\n</tr>\n<tr>\n<td>static BigDecimal valueOf(long x, int scale)</td>\n<td><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.387ex\" height=\"2.565ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -883.8 3707.1 1133.8\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(572,0)\"><g data-mml-node=\"mo\"><path data-c=\"2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path></g></g><g data-mml-node=\"msup\" transform=\"translate(1072,0)\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(1033,393.1) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(469,0)\"><path data-c=\"1D450\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(902,0)\"><path data-c=\"1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1431,0)\"><path data-c=\"1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1729,0)\"><path data-c=\"1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path></g></g></g></g></g></svg></mjx-container></td>\n</tr>\n</tbody>\n</table>\n</div>\n","text":"块作用域 Block块（即复合语句）是指由一对大括号括起来的若干条简单的Java语句。块确定了变量的作用域。一个块可以嵌套在另一个块中。 注意： 不能在嵌套的两个块中声明同名的变量。 块内定义的变量块外不能使用。 流程控制语句 流程控制 顺序结构 分支语句 if-else、swi...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":7,"path":"api/categories/JAVA.json"}],"tags":[{"name":"java","slug":"java","count":7,"path":"api/tags/java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9D%97%E4%BD%9C%E7%94%A8%E5%9F%9F-Block\"><span class=\"toc-text\">块作用域 Block</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">流程控制语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%A6%E6%A0%87%E7%AD%BE%E7%9A%84break%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">带标签的break语句</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A4%A7%E6%95%B0%E5%80%BC\"><span class=\"toc-text\">大数值</span></a></li></ol>","author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"数组","uid":"e16187d7a3c490f96b788338bdd79d24","slug":"J5-数组","date":"2021-11-05T03:24:52.000Z","updated":"2021-11-05T05:49:43.975Z","comments":true,"path":"api/articles/J5-数组.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/ce3cebf7632b4003bbd0eca49e0b1a6b.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16","text":"Java数组数组(Array)，是多个相同类型数据按一定顺序排列的集合，并使用一个名字命名，并通过编号的方式对这些数据进行统一管理。 数组的常见概念 数组名 下标(或索引) 元素 数组的长度 一维数组的创建与使用// 一维数组的声明方式： type var[] 或 type[] ...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":7,"path":"api/categories/JAVA.json"}],"tags":[{"name":"java","slug":"java","count":7,"path":"api/tags/java.json"}],"author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"输入输出","uid":"9c8bf421039c727b1fd8f06884d0808c","slug":"J3-输入输出","date":"2021-11-05T01:34:37.000Z","updated":"2021-11-05T02:27:34.857Z","comments":true,"path":"api/articles/J3-输入输出.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/ce3cebf7632b4003bbd0eca49e0b1a6b.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16","text":"标准输入输出数据读入import java.util.Scanner; Scanner in = new Scanner(System,in); // 读入一行 String name = in.nextLine(); //读入一个单词 String name = in.next...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":7,"path":"api/categories/JAVA.json"}],"tags":[{"name":"java","slug":"java","count":7,"path":"api/tags/java.json"}],"author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}}}}