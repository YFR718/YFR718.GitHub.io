{"title":"PyMySQL","uid":"31135c47a98e6bfd7ef6f55be399b5e8","slug":"P2-PyMySQL","date":"2021-11-10T02:06:01.000Z","updated":"2021-11-11T09:59:18.865Z","comments":true,"path":"api/articles/P2-PyMySQL.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/593c816f63e9423bb83bbe395daa3c55.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center","content":"<h1 id=\"1-连接数据库\"><a href=\"#1-连接数据库\" class=\"headerlink\" title=\"1. 连接数据库\"></a>1. 连接数据库</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pymysql\n\n<span class=\"token comment\"># 创建连接对象</span>\nconn <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">3306</span><span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token string\">'mysql'</span><span class=\"token punctuation\">,</span>database<span class=\"token operator\">=</span><span class=\"token string\">'python'</span><span class=\"token punctuation\">,</span> charset<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 获取游标对象</span>\ncursor <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭游标</span>\ncursor<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭连接</span>\nconn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"2-数据库操作\"><a href=\"#2-数据库操作\" class=\"headerlink\" title=\"2. 数据库操作\"></a>2. 数据库操作</h2><h3 id=\"2-1-DQL语言select\"><a href=\"#2-1-DQL语言select\" class=\"headerlink\" title=\"2.1 DQL语言select\"></a>2.1 <strong>DQL语言select</strong></h3><p><strong>select选择</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 查询 SQL 语句</span>\nsql <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from students;\"</span>\n<span class=\"token comment\"># 执行 SQL 语句 返回值就是 SQL 语句在执行过程中影响的行数</span>\nrow_count <span class=\"token operator\">=</span> cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 取出结果集中一行数据,　例如:(1, '张三')</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 取出结果集中的所有数据, 例如:((1, '张三'), (2, '李四'), (3, '王五'))</span>\n<span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> cursor<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n        <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Python查询Mysql使用 fetchone() 方法获取单条数据, 使用fetchall() 方法获取多条数据。</p>\n<ul>\n<li><p><strong>fetchone():</strong> 该方法获取下一个查询结果集。结果集是一个对象</p>\n</li>\n<li><p><strong>fetchall():</strong> 接收全部的返回结果行.</p>\n</li>\n<li><p><strong>rowcount:</strong> 这是一个只读属性，并返回执行execute()方法后影响的行数。</p>\n</li>\n</ul>\n<h3 id=\"2-2-DML数据操作语言insert-、update、delete\"><a href=\"#2-2-DML数据操作语言insert-、update、delete\" class=\"headerlink\" title=\"2.2 DML数据操作语言insert 、update、delete\"></a>2.2 <strong>DML数据操作语言insert 、update、delete</strong></h3><p><strong>insert插入</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># SQL 插入语句</span>\nsql <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"INSERT INTO EMPLOYEE(FIRST_NAME,\n         LAST_NAME, AGE, SEX, INCOME)\n         VALUES ('Mac', 'Mohan', 20, 'M', 2000)\"\"\"</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n   <span class=\"token comment\"># 执行sql语句</span>\n   cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n   <span class=\"token comment\"># 提交到数据库执行</span>\n   db<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n   <span class=\"token comment\"># 如果发生错误则回滚</span>\n   db<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>插入多行数据时，数据是list，其中元素是元组。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 一次插入多行数据</span>\n<span class=\"token comment\"># print(value)</span>\nsql <span class=\"token operator\">=</span> <span class=\"token string\">'insert into summary(id,dataname,herf,rel) values(%s,%s,%s,%s)'</span>\nvalue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> rep <span class=\"token keyword\">in</span> root<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">'repository'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> rep<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n    dataname <span class=\"token operator\">=</span> rep<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n    herf <span class=\"token operator\">=</span> rep<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'link'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>attrib<span class=\"token punctuation\">[</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">]</span>\n    rel <span class=\"token operator\">=</span> rep<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'link'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>attrib<span class=\"token punctuation\">[</span><span class=\"token string\">'rel'</span><span class=\"token punctuation\">]</span>\n    value<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>dataname<span class=\"token punctuation\">,</span>herf<span class=\"token punctuation\">,</span>rel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    cursor<span class=\"token punctuation\">.</span>executemany<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span>\n    db<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"summary写入成功\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    db<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"summary写入失败\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    db<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>update更新</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># SQL 更新语句</span>\nsql <span class=\"token operator\">=</span> <span class=\"token string\">\"UPDATE EMPLOYEE SET AGE = AGE + 1 WHERE SEX = '%c'\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n   <span class=\"token comment\"># 执行SQL语句</span>\n   cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n   <span class=\"token comment\"># 提交到数据库执行</span>\n   db<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n   <span class=\"token comment\"># 发生错误时回滚</span>\n   db<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>delete删除</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># SQL 删除语句</span>\nsql <span class=\"token operator\">=</span> <span class=\"token string\">\"DELETE FROM EMPLOYEE WHERE AGE &gt; %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n   <span class=\"token comment\"># 执行SQL语句</span>\n   cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n   <span class=\"token comment\"># 提交修改</span>\n   db<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n   <span class=\"token comment\"># 发生错误时回滚</span>\n   db<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-3-DDL数据定义语言create、drop、alter\"><a href=\"#2-3-DDL数据定义语言create、drop、alter\" class=\"headerlink\" title=\"2.3 DDL数据定义语言create、drop、alter\"></a>2.3 DDL数据定义语言create、drop、alter</h3><p><strong>create创建数据表</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 使用 cursor() 方法创建一个游标对象 cursor</span>\ncursor <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n \n\n<span class=\"token comment\"># 使用预处理语句创建表</span>\nsql <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">\"\"\"CREATE TABLE EMPLOYEE (\n         FIRST_NAME  CHAR(20) NOT NULL,\n         LAST_NAME  CHAR(20),\n         AGE INT,  \n         SEX CHAR(1),\n         INCOME FLOAT )\"\"\"</span>\n \ncursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>drop删除数据表</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 使用 execute() 方法执行 SQL，如果表存在则删除</span>\ncursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"DROP TABLE IF EXISTS EMPLOYEE\"</span><span class=\"token punctuation\">)</span>\n <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><strong>alter更改数据表</strong></p>\n<h3 id=\"2-4-TCL事务控制语言commit、rollback\"><a href=\"#2-4-TCL事务控制语言commit、rollback\" class=\"headerlink\" title=\"2.4 TCL事务控制语言commit、rollback\"></a>2.4 TCL事务控制语言commit、rollback</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># SQL删除记录语句</span>\nsql <span class=\"token operator\">=</span> <span class=\"token string\">\"DELETE FROM EMPLOYEE WHERE AGE &gt; %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n   <span class=\"token comment\"># 执行SQL语句</span>\n   cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span>\n   <span class=\"token comment\"># 向数据库提交</span>\n   db<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n   <span class=\"token comment\"># 发生错误时回滚</span>\n   db<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":"1. 连接数据库import pymysql # 创建连接对象 conn = pymysql.connect(host='localhost', port=3306, user='root', password='mysql',database='python', charset...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"Python","slug":"Python","count":4,"path":"api/categories/Python.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":2,"path":"api/tags/MySQL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">1. 连接数据库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">2. 数据库操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-DQL%E8%AF%AD%E8%A8%80select\"><span class=\"toc-text\">2.1 DQL语言select</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-DML%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E8%AF%AD%E8%A8%80insert-%E3%80%81update%E3%80%81delete\"><span class=\"toc-text\">2.2 DML数据操作语言insert 、update、delete</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-DDL%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80create%E3%80%81drop%E3%80%81alter\"><span class=\"toc-text\">2.3 DDL数据定义语言create、drop、alter</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-TCL%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6%E8%AF%AD%E8%A8%80commit%E3%80%81rollback\"><span class=\"toc-text\">2.4 TCL事务控制语言commit、rollback</span></a></li></ol></li></ol></li></ol>","author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MySQL基础","uid":"4a207b7e885fdbcca8129599135e5f2e","slug":"B1-MySQL基础","date":"2021-11-10T12:30:04.000Z","updated":"2021-11-11T07:07:12.093Z","comments":true,"path":"api/articles/B1-MySQL基础.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/8a799b9a11d1488288d2b34beffa2209.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center","text":"1 MySQL概述1.1 数据库概述数据库的好处持久化数据到本地可以实现结构化查询，方便管理 数据库相关概念DB：数据库，保存一组有组织的数据的容器DBMS：数据库管理系统，又称为数据库软件（产品），用于管理DB中的数据SQL:结构化查询语言，用于和DBMS通信的语言 数据库存储...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"数据库","slug":"数据库","count":3,"path":"api/categories/数据库.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":2,"path":"api/tags/MySQL.json"}],"author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"XML解析","uid":"446bbf5d6e6c49aba6d56562199f8a0a","slug":"P1-XML解析","date":"2021-11-10T01:23:54.000Z","updated":"2021-11-10T12:28:40.173Z","comments":true,"path":"api/articles/P1-XML解析.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/ddc5881723c045dab033cc64133cf4bd.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center","text":"1 xml.etree.ElementTree对Python的轻量级XML支持。 XML是一种固有的分层数据格式，最自然的表示方法是使用树。这个模块有两个类用于此目的: ElementTree将整个XML文档表示为树。 元素表示此树中的单个节点。 ​ 与整个文档的交互(对文件的读...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"Python","slug":"Python","count":4,"path":"api/categories/Python.json"}],"tags":[{"name":"XML","slug":"XML","count":1,"path":"api/tags/XML.json"}],"author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}}}}