{"title":"Java概述","uid":"2646898c8ef5a9766cbd5f124442ee5c","slug":"J0-Java概述","date":"2021-11-04T06:41:20.000Z","updated":"2021-11-04T09:49:38.017Z","comments":true,"path":"api/articles/J0-Java概述.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/ce3cebf7632b4003bbd0eca49e0b1a6b.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16","content":"<h1 id=\"Java概述\"><a href=\"#Java概述\" class=\"headerlink\" title=\"Java概述\"></a>Java概述</h1><p>是SUN(Stanford University Network，斯坦福大学网络公司 ) 1995年推出的一门高级编程语言。</p>\n<h2 id=\"Java语言特性\"><a href=\"#Java语言特性\" class=\"headerlink\" title=\"Java语言特性\"></a>Java语言特性</h2><ul>\n<li><p>特点一：面向对象</p>\n<p>两个基本概念：类、对象</p>\n<p>三大特性：封装、继承、多态</p>\n</li>\n<li><p>特点二：健壮性</p>\n<p>吸收了C/C++语言的优点，但去掉了其影响程序健壮性的部分（如指针、内存的申请与释放等），提供了一个相对安全的内存管理和访问机制</p>\n</li>\n<li><p>特点三：跨平台性</p>\n<p>跨平台性：通过Java语言编写的应用程序在不同的系统平台上都可以运行。“Write once , Run Anywhere”</p>\n<p>原理：只要在需要运行 java 应用程序的操作系统上，先安装一个Java虚拟机 (JVM Java Virtual Machine) 即可。由JVM来负责Java程序在该系统中的运行。</p>\n<p>因为有了JVM，同一个Java 程序在三个不同的操作系统中都可以执行。这样就实现了Java 程序的跨平台性。</p>\n</li>\n</ul>\n<h2 id=\"核心机制—Java虚拟机\"><a href=\"#核心机制—Java虚拟机\" class=\"headerlink\" title=\"核心机制—Java虚拟机\"></a>核心机制—Java虚拟机</h2><ul>\n<li>JVM是一个虚拟的计算机，具有指令集并使用不同的存储区域。负责执行指令，管理数据、内存、寄存器。</li>\n<li>对于不同的平台，有不同的虚拟机。</li>\n<li>只有某平台提供了对应的java虚拟机，java程序才可在此平台运行</li>\n<li>Java虚拟机机制屏蔽了底层运行平台的差别，实现了“一次编译，到处运行”</li>\n</ul>\n<h2 id=\"核心机制—垃圾回收\"><a href=\"#核心机制—垃圾回收\" class=\"headerlink\" title=\"核心机制—垃圾回收\"></a>核心机制—垃圾回收</h2><p>​        不再使用的内存空间应回收——垃圾回收。在C/C++等语言中，由程序员负责回收无用内存。Java 语言消除了程序员回收无用内存空间的责任：它提供一种系统级线程跟踪存储空间的分配情况。并在JVM空闲时，检查并释放那些可被释放的存储空间。垃圾回收在Java程序运行过程中自动进行，程序员无法精确控制和干预。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Java语言的环境</th>\n<th>功能</th>\n<th>包含</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>JDK(Java Development Kit    Java开发工具包)</td>\n<td>JDK是提供给Java开发人员使用的，其中包含了java的开发工具，也包括了JRE。所以安装了JDK，就不用在单独安装JRE了。</td>\n<td>JRE + 开发工具集（编译工具javac.exe 打包工具jar.exe)</td>\n</tr>\n<tr>\n<td>JRE(Java Runtime Environment    Java运行环境)</td>\n<td>包括Java虚拟机(JVM Java Virtual Machine)和Java程序所需的核心类库等，如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。</td>\n<td>JVM + Java SE标准类库</td>\n</tr>\n<tr>\n<td>JVM (Java Virtal Machine Java虚拟机）</td>\n<td>JVM是一个虚拟的计算机，具有指令集并使用不同的存储区域。负责执行指令，管理数据、内存、寄存器。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"Hello-Java\"><a href=\"#Hello-Java\" class=\"headerlink\" title=\"Hello Java\"></a>Hello Java</h2><p>​        我们来编写第一个简单的Java程序：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloJava</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2333\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>public称为访问修饰符（accessmodifier），这些修饰符用于控制程序的其他部分对这段代码的访问级别。</li>\n<li>class表明Java程序中的全部内容都包含在类中。</li>\n<li>HelloJava：类名。</li>\n<li>static：静态方法。</li>\n<li>void：无参数返回。</li>\n<li>main：主方法，程序的入口。</li>\n<li>String[]：程序执行的参数。</li>\n<li>args：参数名。</li>\n<li>System.out.println()：输出一行语句。</li>\n</ul>\n<h2 id=\"Java运行步骤：\"><a href=\"#Java运行步骤：\" class=\"headerlink\" title=\"Java运行步骤：\"></a>Java运行步骤：</h2><ol>\n<li>将 Java 代码编写到扩展名为 .java 的文件中。</li>\n<li>通过 javac 命令对该 java 文件进行编译。</li>\n<li>通过 java 命令对生成的 class 文件进行运行。</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">C</span><span class=\"token operator\">:</span>\\<span class=\"token class-name\">Users</span>\\<span class=\"token number\">24378</span>\\<span class=\"token class-name\">Desktop</span>\\<span class=\"token class-name\">Java</span><span class=\"token operator\">></span>javac f1<span class=\"token punctuation\">.</span>java\n<span class=\"token class-name\">C</span><span class=\"token operator\">:</span>\\<span class=\"token class-name\">Users</span>\\<span class=\"token number\">24378</span>\\<span class=\"token class-name\">Desktop</span>\\<span class=\"token class-name\">Java</span><span class=\"token operator\">></span>java f1\nhello <span class=\"token class-name\">Java</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"一些规范\"><a href=\"#一些规范\" class=\"headerlink\" title=\"一些规范\"></a>一些规范</h2><h3 id=\"Java命名规范\"><a href=\"#Java命名规范\" class=\"headerlink\" title=\"Java命名规范\"></a>Java命名规范</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>类型(名)</th>\n<th>约束</th>\n<th>列</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>项目</td>\n<td>全部小写，画线-分隔</td>\n<td>spring-cloud</td>\n</tr>\n<tr>\n<td>包</td>\n<td>全部小写</td>\n<td>com.yfr.softmax</td>\n</tr>\n<tr>\n<td>类</td>\n<td>单次首字母大写</td>\n<td>NewWorld</td>\n</tr>\n<tr>\n<td>变量/方法</td>\n<td>首字母小写</td>\n<td>userName</td>\n</tr>\n<tr>\n<td>常量</td>\n<td>全部大写，下划线_分隔</td>\n<td>INT_MAX</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"Java代码编写规范\"><a href=\"#Java代码编写规范\" class=\"headerlink\" title=\"Java代码编写规范\"></a>Java代码编写规范</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloJava</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2333\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>注意大括号的风格</li>\n<li>二元三元运算符两边用一个空格隔开</li>\n<li>逗号语句后如不换行，紧跟一个空格</li>\n<li>将类似操作，或一组操作放在一起不用空行隔开，而用空行隔开不同组的代码</li>\n<li>每个if while for等语句，都不要省略大括号{}</li>\n</ul>\n<h3 id=\"Java注释\"><a href=\"#Java注释\" class=\"headerlink\" title=\"Java注释\"></a>Java注释</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>注释类型</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>单行注释</td>\n<td>//注释文字</td>\n<td></td>\n</tr>\n<tr>\n<td>多行注释</td>\n<td>/<em>  注释文字 </em>/</td>\n<td></td>\n</tr>\n<tr>\n<td>文档注释：</td>\n<td>/<em>*<br />@author  指定java程序的作者<br />@version  指定源文件的版本<br /></em>/</td>\n</tr>\n</tbody>\n</table>\n</div>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># 生成注释文档\nPS C:\\Users\\24378\\Desktop\\Java&gt; javadoc -d mydoc -author -version .\\f1.java\n正在加载源文件.\\f1.java...\n正在构造 Javadoc 信息...\n...<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"Java注意事项\"><a href=\"#Java注意事项\" class=\"headerlink\" title=\"Java注意事项\"></a>Java注意事项</h3><ul>\n<li><p>Java源文件以“java”为扩展名。源文件的基本组成部分是类（class），如本例中的HelloWorld类。</p>\n</li>\n<li><p>Java应用程序的执行入口是main()方法。它有固定的书写格式：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n<ul>\n<li><p>Java语言严格区分大小写。</p>\n</li>\n<li><p>Java方法由一条条语句构成，每个语句以“;”结束。</p>\n</li>\n<li><p>大括号都是成对出现的，缺一不可。</p>\n</li>\n<li><p>一个源文件中最多只能有一个public类。其它类的个数不限，如果源文件包含一个public类，则文件名必须按该类名命名。</p>\n</li>\n</ul>\n","text":"Java概述是SUN(Stanford University Network，斯坦福大学网络公司 ) 1995年推出的一门高级编程语言。 Java语言特性 特点一：面向对象 两个基本概念：类、对象 三大特性：封装、继承、多态 特点二：健壮性 吸收了C/C++语言的优点，但去掉了其...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":4,"path":"api/categories/JAVA.json"}],"tags":[{"name":"java","slug":"java","count":4,"path":"api/tags/java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Java%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">Java概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java%E8%AF%AD%E8%A8%80%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">Java语言特性</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6%E2%80%94Java%E8%99%9A%E6%8B%9F%E6%9C%BA\"><span class=\"toc-text\">核心机制—Java虚拟机</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6%E2%80%94%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6\"><span class=\"toc-text\">核心机制—垃圾回收</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Hello-Java\"><span class=\"toc-text\">Hello Java</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java%E8%BF%90%E8%A1%8C%E6%AD%A5%E9%AA%A4%EF%BC%9A\"><span class=\"toc-text\">Java运行步骤：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%BA%9B%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">一些规范</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Java%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">Java命名规范</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Java%E4%BB%A3%E7%A0%81%E7%BC%96%E5%86%99%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">Java代码编写规范</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Java%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">Java注释</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Java%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">Java注意事项</span></a></li></ol></li></ol></li></ol>","author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"基本数据类型","uid":"234a650b9f919d31820f31482789a1da","slug":"J1-数据类型","date":"2021-11-04T09:50:09.000Z","updated":"2021-11-04T14:08:13.015Z","comments":true,"path":"api/articles/J1-数据类型.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/ce3cebf7632b4003bbd0eca49e0b1a6b.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16","text":"基本数据类型整数 类型 存储需求 取值范围 例 int 4字节 （21亿） 10 short 2字节 （32768） long 8字节 10L byte 1字节 （128） 浮点数 类型 存储需求 符号位 指数位 尾数位 例 float 4字节 1 8 23 3.14F doub...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":4,"path":"api/categories/JAVA.json"}],"tags":[{"name":"java","slug":"java","count":4,"path":"api/tags/java.json"}],"author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"疑难杂症队列","uid":"71dcb878b30b2fb16e5265f7515744d5","slug":"1-疑难杂症队列","date":"2021-11-04T05:27:30.000Z","updated":"2021-11-04T07:02:30.052Z","comments":true,"path":"api/articles/1-疑难杂症队列.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/728718d7b95643cfafdbac6f3ebf65f8.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAWUZSNzE4,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center","text":"Java 整理笔记，等待发布 尚硅谷整理的Java学习 Linux 笔记整理，待发布 shell编程笔记整理，待发布 算法 leetcode每日三道题 ACwing课程学习 ","link":"","photos":[],"count_time":{"symbolsCount":90,"symbolsTime":"1 mins."},"categories":[{"name":"学习规划","slug":"学习规划","count":1,"path":"api/categories/学习规划.json"}],"tags":[],"author":{"name":"YFR718","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/47553658?s=400&u=5e0a85700c66d7a2661c5664ec5f24d94e5ed01a&v=4","link":"/","description":"大数据萌新","socials":{"github":"https://github.com/YFR718","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"d","csdn":"","juejin":"","customs":{}}}}}